{"version":3,"sources":["FetchAPI.js","Context.js","components/Courses.js","components/CourseDetail.js","components/Form.js","components/CreateCourse.js","components/UpdateCourse.js","components/UserSignIn.js","components/UserSignUp.js","components/UserSignOut.js","components/Error.js","components/NotFound.js","components/Forbidden.js","PrivateRoute.js","App.js","components/Header.js","index.js"],"names":["FetchAPI","path","method","body","requiresAuth","credentials","baseURL","url","options","headers","JSON","stringify","encodedCredentials","btoa","username","password","fetch","this","api","response","console","log","status","json","then","data","Error","user","errors","id","course","location","get","message","updates","Context","React","createContext","Provider","state","authenticatedUser","Cookies","getJSON","signIn","emailAddress","a","fetchAPI","getUser","setState","set","expires","signOut","remove","value","actions","props","children","Component","Consumer","withContext","context","Courses","courses","getCourses","renderCourses","jsx","length","push","key","i","className","to","title","viewBox","points","CourseDetail","deleteRequested","getCourse","match","params","history","handleDelete","deleteCourse","Fragment","renderButtons","renderCourse","firstName","lastName","source","description","estimatedTime","materialsNeeded","authUser","showDeleteConfirmation","authenticated","onClick","showDeleteConfirm","style","margin","hideDeleteConfirm","cancel","submit","submitButtonText","elements","ErrorsDisplay","onSubmit","event","preventDefault","type","errorsDisplay","map","error","CreateCourse","change","target","name","replace","includes","createCourse","Form","renderFormTitle","renderFormDescription","renderFormEstimatedTime","renderFormMaterialsNeeded","onChange","placeholder","UpdateCourse","checkUser","courseUserId","authUserId","index","updateCourse","UserSignIn","from","pathname","catch","err","href","confirmPassword","concat","createUser","component","rest","render","HeaderWithContext","exact","UserSignUp","UserSignOut","PrivateRoute","Forbidden","NotFound","ReactDOM","App","document","getElementById"],"mappings":"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","file":"static/js/main.723f77b8.chunk.js","sourcesContent":["export default class FetchAPI {\n    static url = '/api';\n    \n    // Fetch API method\n    api(path, method = 'GET', body = null, requiresAuth = false, credentials = null) {\n        const baseURL = 'http://localhost:5000/api';\n        const url = baseURL + path;\n\n        const options = {\n            method,\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n            },\n        };\n\n        if (body !== null) {\n            options.body = JSON.stringify(body);\n        }\n    \n        if (requiresAuth) {\n            const encodedCredentials = btoa(`${credentials.username}:${credentials.password}`);\n            options.headers['Authorization'] = `Basic ${encodedCredentials}`;\n        }\n\n        return fetch(url, options);\n    }\n\n    // Get single user - GET from /users\n    async getUser(username, password) {\n        const response = await this.api(`/users`, 'GET', null, true, {username, password});\n        console.log(response.status);\n\n        if(response.status === 200) {\n            return response.json().then(data => data);\n        } else if (response.status === 401) {\n            return null;\n        } else {\n            throw new Error();\n        }\n    }\n\n    // Create user - POST to /users\n    async createUser(user) {\n        const response = await this.api(`/users`, 'POST', user);\n        console.log(response.status);\n\n        if (response.status === 201) {\n            return [];\n        } else if (response.status === 400) {\n            return response.json().then(data => {\n              return data.errors;\n            });\n        } else {\n            throw new Error();\n        }\n    }\n\n    // Get all courses - GET from /courses\n    async getCourses() {\n        const response = await this.api('/courses', 'GET');\n        console.log(response.status);\n\n        if(response.status === 200 || 404) {\n            return response.json().then(data => {\n                const results = {\n                    status: response.status,\n                    data: data\n                };\n                return results;\n            });\n        } \n        else {\n            throw new Error();\n        }\n\n    }\n\n    // Get single course - GET from /courses/id\n    async getCourse(id) {\n        const response = await this.api(`/courses/${id}`, 'GET');\n        console.log(response.status);\n        \n        if (response.status === 200 || response.status === 404) {\n            return response.json().then(data => {\n                const results = {\n                    status: response.status,\n                    data: data\n                };\n                return results;\n            });\n        } \n        else {\n            throw new Error();\n        }\n    }\n\n    // Create course - POST to /courses\n    async createCourse(course, username, password) {\n        const response = await this.api('/courses', 'POST', course, true, {username, password});\n        console.log(response.status);\n\n        if (response.status === 201) {\n            return {\n                status: response.status,\n                location: response.headers.get('Location')\n            };\n        } else if (response.status === 400){\n            return response.json().then(data => {\n                const results = {\n                    status: response.status,\n                    message: data.message\n                };\n                return results;\n            });\n        } else if (response.status === 401) {\n            return { status: response.status };\n        } else {\n            throw new Error();\n        }\n    }\n\n    // Updated course - PUT to /courses/id\n    async updateCourse(id, updates, username, password) {\n        const response = await this.api(`/courses/${id}`, 'PUT', updates, true, {username, password});\n\n        console.log(response.status);\n\n        if (response.status === 204) {\n            return {\n                status: response.status,\n                location: response.headers.get('Location')\n            };\n        } else if (response.status === 400){\n            return response.json().then(data => {\n                const results = {\n                    status: response.status,\n                    errors: data.errors\n                };\n                return results;\n            });\n        } else if (response.status === 401 || response.status === 403 || response.status === 404) {\n            return { status: response.status };\n        } else {\n            throw new Error();\n        }\n    }\n\n    // Delete course - DELETE to /courses/id\n    async deleteCourse(id, username, password) {\n        const response = await this.api(`/courses/${id}`, 'DELETE', null, true, {username, password});\n        console.log(response.status);\n\n        if (response.status === 204) {\n            return {\n                status: response.status\n            }\n        } else if (response.status === 403 || response.status === 404) {\n            return response.json().then(data => {\n                const results = {\n                    status: response.status,\n                    message: data.message\n                };\n                return results;\n            });\n        } else {\n            throw new Error();\n        }\n\n    }\n}","import React, { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport FetchAPI from './FetchAPI';\n\nconst Context = React.createContext();\n\nexport class Provider extends Component {\n    state = {\n        authenticatedUser: Cookies.getJSON('authenticatedUser') || null\n    };\n\n    constructor() {\n        super();\n        this.fetchAPI = new FetchAPI();\n    }\n\n    render() { \n        const value = {\n            authenticatedUser: this.state.authenticatedUser,\n            fetchAPI: this.fetchAPI,\n            actions: {\n                signIn: this.signIn,\n                signOut: this.signOut\n            }\n        };\n        return (\n            <Context.Provider value={value}>\n                {this.props.children}\n            </Context.Provider>\n        );\n    }\n\n    // Persist Authorized Username and Password\n    signIn = async (emailAddress, password) => {\n        const user = await this.fetchAPI.getUser(emailAddress, password);\n\n        if (user !== null) {\n            user.password = password;\n            this.setState(() => {\n                return {authenticatedUser: user};\n            });\n            Cookies.set('authenticatedUser', JSON.stringify(user), { expires: 1 });\n        } \n        return user;\n    }\n\n    // Remove authenticated user from state and Cookies\n    signOut = () => {\n        this.setState(() => {\n            return {\n                authenticatedUser: null,\n            };\n        });\n        Cookies.remove('authenticatedUser');\n    }\n\n}\n\nexport const Consumer = Context.Consumer;\n\n/**\n * Higher-order component, wraps children component with Context\n * @param {class} Component - React component\n * @returns {function} - Context wrapper component\n */\nexport default function withContext(Component) {\n    return function ContextComponent(props) {\n        return (\n            <Context.Consumer>\n                {context => <Component {...props} context={context} />}\n            </Context.Consumer>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass Courses extends Component {\n    state = {\n        courses: null,\n        message: \"\"\n    }\n\n\n    render() {\n        return (\n            <div className=\"bounds\">\n                {this.renderCourses()}\n                <div className=\"grid-33\">\n                    <NavLink className=\"course--module course--add--module\" to=\"/courses/create\">\n                        <h3 className=\"course--add--title\">\n                            <svg viewBox=\"0 0 13 13\" className=\"add\">\n                                <polygon points=\"7,6 7,0 6,0 6,6 0,6 0,7 6,7 6,13 7,13 7,7 13,7 13,6 \"></polygon>\n                            </svg>New Course\n                        </h3>\n                    </NavLink>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        this.getCourses();      \n    }\n\n    // Store course data to state from Fetch API\n    getCourses = async () => {\n        const { fetchAPI } = this.props.context;\n        const data = await fetchAPI.getCourses();\n\n        if (data.status === 200) {\n            this.setState({courses: data.data});\n        } else if (data.status === 404) {\n            this.setState({message: data.data.message});\n        } else {\n            this.setState({message: 'Courses were not found'});\n        }\n    }\n\n    /** Render helper methods **/\n    renderCourses = () => {\n        let jsx = [];\n        const { courses, message } = this.state;\n\n        if (message.length > 0) {\n            jsx.push(\n                <h1 key={1}>{message}</h1>\n            )\n        } else if (courses !== null) {\n\n            for (let i = 0; i < courses.length; i++) {\n                jsx.push(\n                    <div key={courses[i].id} className=\"grid-33\">\n                        <NavLink  className=\"course--module course--link\" to={`/courses/${courses[i].id}`} >\n                        <h4 className=\"course--label\">Course</h4>\n                        <h3 className=\"course--title\">{courses[i].title}</h3>\n                        </NavLink>\n                    </div>\n                )\n            }  \n        } else  {\n            jsx.push(<h1 key={1}>Loading...</h1>);\n        }\n\n        return jsx;\n    }\n\n\n}\n\nexport default Courses;","import React, { Component } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { NavLink } from 'react-router-dom';\n\nclass CourseDetail extends Component {\n    state = {\n        course: null,\n        deleteRequested: false\n    }\n\n    render() { \n\n        return (  \n            <React.Fragment>\n                <div className=\"actions--bar\">\n                    {this.renderButtons()}\n                </div>\n                <div className=\"bounds course--detail\">\n                    {this.renderCourse()}  \n                </div>\n            </React.Fragment>       \n        );\n    }\n\n    componentDidMount() {\n        this.getCourse();      \n    }\n\n    // Store course data to state from Fetch API\n    getCourse = async () => {\n        const { fetchAPI } = this.props.context;\n        const id = this.props.match.params.id;\n\n        const data = await fetchAPI.getCourse(id);\n\n        if (data.status === 200) {\n            this.setState({course: data.data});\n        } else if (data.status === 404) {\n            this.props.history.push('/notfound');\n        } else {\n            this.props.history.push('/error');\n        }\n    }\n\n    // Delete Course\n    handleDelete = async () => {\n        const { fetchAPI, authenticatedUser } = this.props.context;\n        const id = this.props.match.params.id;\n        const { emailAddress, password } = authenticatedUser;\n\n        const data = await fetchAPI.deleteCourse(id, emailAddress, password);\n\n        if (data.status === 204) {\n            this.props.history.push('/');\n        } else if (data.status === 403) {\n            this.props.history.push('/forbidden');\n        } else if (data.status === 404) {\n            this.props.history.push('/notfound');\n        } else {\n            this.props.history.push('/error');\n        }\n    }\n\n    /** Render helper methods **/\n    renderCourse() {\n        let jsx = [];\n        const { course } = this.state;\n        \n        if (course !== null) {\n            jsx.push(\n                <div key={1} className=\"grid-66\">\n                    <div className=\"course--header\">\n                        <h4 className=\"course--label\">Course</h4>\n                        <h3 className=\"course--title\">{course.title}</h3>\n                        <p>{`By ${course.user.firstName} ${course.user.lastName}`}</p>\n                    </div>\n                    <div className=\"course--description\">\n                        <ReactMarkdown source={course.description} />\n                    </div>\n                    <div className=\"grid-25 grid-right\"></div>\n                        <div className=\"course--stats\">\n                            <ul className=\"course--stats--list\">\n                                <li className=\"course--stats--list--item\">\n                                {course.estimatedTime ?\n                                    <React.Fragment>\n                                        <h4>Estimated Time</h4>\n                                        <h3>{course.estimatedTime}</h3>\n                                    </React.Fragment>\n                                    :\n                                    null\n                                }\n                                </li>\n                                <li className=\"course--stats--list--item\">\n                                {course.materialsNeeded ?\n                                    <React.Fragment>\n                                        <h4>Materials Needed</h4>\n                                            <ReactMarkdown source={course.materialsNeeded} />\n                                    </React.Fragment>\n                                    :\n                                    null\n                                }\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n            );\n        } else  {\n            jsx.push(<h1 key={1}>Loading...</h1>);\n        }\n\n        return jsx;\n    }\n\n    renderButtons() {\n        const { course } = this.state;\n        const authUser = this.props.context.authenticatedUser;\n        const showDeleteConfirmation = this.state.deleteRequested;\n\n        let authenticated = false;\n        \n        if (authUser !== null && this.state.course !== null) {\n            if (this.state.course.user.id === authUser.id) {\n                authenticated = true;\n            }\n        }\n\n        if (course !== null) {\n            return (\n                <span>\n                    <div className=\"bounds\">\n                        <div className=\"grid-100\"> \n                            {authenticated ?\n                                <span>\n                                    <NavLink \n                                        className=\"button\" \n                                        to={`${course.id}/update`}>\n                                        Update Course</NavLink>\n                                    <button \n                                        className=\"button\" \n                                        onClick={() => this.showDeleteConfirm()}>\n                                    Delete Course</button>\n                                </span>\n                                :\n                                null\n                            }\n                            <NavLink className=\"button button-secondary\" to=\"/\">Return to List</NavLink>\n                        </div>\n                    </div>\n                    {showDeleteConfirmation ?\n                        <div className=\"bounds\">\n                            <div className=\"grid-100\" style={{margin: '10px'}}>\n                                <button \n                                    className=\"button\"\n                                    onClick={() => this.handleDelete()}>\n                                    Confirm delete</button>\n                                <button \n                                    className=\"button button-secondary\" \n                                    onClick={() => this.hideDeleteConfirm()}>\n                                    No, cancel</button>\n                            </div>\n                        </div>\n                        :\n                        null\n                    }\n                </span>   \n            )\n        } else {\n            return null;\n        }\n    }\n\n    showDeleteConfirm() {\n        this.setState({ deleteRequested: true });\n    }\n\n    hideDeleteConfirm() {\n        this.setState({ deleteRequested: false });\n    }\n\n}\n \nexport default CourseDetail;","import React from 'react';\n// import ErrorDisplay from './ErrorDisplay';\n\nexport default (props) => {\n    const {\n        cancel,\n        errors,\n        submit,\n        submitButtonText,\n        elements,\n    } = props;\n\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        submit();\n    }\n\n    function handleCancel(event) {\n        event.preventDefault();\n        cancel();\n    }\n\n    return (\n        <div>\n            <ErrorsDisplay errors={errors} />\n            <form onSubmit={handleSubmit}>\n                {elements()}\n                <div className=\"grid=100 pad-bottom\">\n                    <button className=\"button\" type=\"submit\">{submitButtonText}</button>\n                    <button className=\"button button-secondary\" onClick={handleCancel}>Cancel</button>\n                </div>\n            </form>\n        </div>\n    )\n\n    // Render any validation errors from API\n    function ErrorsDisplay({ errors }) {\n        let errorsDisplay = null;\n\n        if (errors.length) {\n            errorsDisplay = (\n                <div>\n                    <h2 className=\"validation--errors--label\">Validation errors</h2>\n                    <div className=\"validation-errors\">\n                        <ul>\n                        {errors.map((error, i) => <li key={i}>{`${i+1}.) ${error}`}</li>)}\n                        </ul>\n                    </div>\n                </div>\n            );\n        }\n        \n        return errorsDisplay;\n    }\n}\n\n","import React, { Component } from 'react';\nimport Form from './Form';\n\nclass CreateCourse extends Component {\n    state = {\n        title: '',\n        description: '',\n        estimatedTime: '',\n        materialsNeeded: '',\n        errors: [],\n    }\n\n\n    render() { \n        const {\n            errors\n        } = this.state;\n\n        return (\n            <div className=\"bounds course--detail\">\n                <h1>Create Course</h1>\n                <div>\n                    <Form \n                        cancel={this.cancel}\n                        errors={errors}\n                        submit={this.submit}\n                        submitButtonText=\"Create Course\"\n                        elements={() => (\n                            <React.Fragment>\n                                <div className=\"grid-66\">\n                                    {this.renderFormTitle()}\n                                    {this.renderFormDescription()}\n                                </div>\n                                <div className=\"grid-25 grid-right\">\n                                    <div className=\"course--stats\">\n                                        <ul className=\"course--stats--list\">\n                                            {this.renderFormEstimatedTime()}\n                                            {this.renderFormMaterialsNeeded()}\n                                        </ul>\n                                    </div>\n                                </div>\n                            </React.Fragment>\n                            \n                        )}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    change = (event) => {\n        const { name, value } = event.target;\n\n        this.setState(() => {\n            return {\n                [name]: value\n            };\n        });\n    }\n\n    submit = async () => {\n        const { fetchAPI, authenticatedUser } = this.props.context;\n        const { emailAddress, password } = authenticatedUser;\n\n        const {\n            title,\n            description,\n            estimatedTime,\n            materialsNeeded,\n        } = this.state;\n\n        const course = {\n            title,\n            description: description.replace(/\\n/g, '  \\n'),\n            estimatedTime: estimatedTime.includes('hour') ? \n                estimatedTime : \n                estimatedTime.includes('one', 0) || (estimatedTime.length === 1 && estimatedTime.includes('1', 0)) ? \n                    estimatedTime + ' hour' :\n                    estimatedTime + ' hours',\n            materialsNeeded: materialsNeeded.replace(/\\n/g, '  \\n')\n        };\n\n        const data = await fetchAPI.createCourse(course, emailAddress, password);\n        if (data.status === 201) {\n            this.props.history.push(`/courses${data.location}`);\n        } else if (data.status === 400) {\n            this.setState({ errors: data.message });\n        } else if (data.status === 401) {\n            this.props.history.push('/forbidden');\n        } else {\n            this.props.history.push('/error');\n        }\n    }\n\n    cancel = () => {\n        this.props.history.push('/');\n    }\n\n    renderFormTitle() {\n        const { title } = this.state;\n        return (\n            <div className=\"course--header\">\n                <h4 className=\"course==label\">Course</h4>\n                <div>\n                    <input \n                        className=\"input-title course--title--input\" \n                        id=\"title\" \n                        name=\"title\" \n                        type=\"text\"\n                        value={title}\n                        onChange={this.change}\n                        placeholder=\"Course title...\"  />\n                </div>\n                <p>By Joes Smith</p>\n            </div>\n        )\n    }\n\n    renderFormDescription() {\n        const { description } = this.state;\n        return (\n            <div className=\"course--description\">\n                <textarea \n                    id=\"description\" \n                    name=\"description\" \n                    className=\"\" \n                    value={description}\n                    onChange={this.change}\n                    placeholder=\"Course description...\">\n                </textarea>\n            </div>\n        )\n    }\n\n    renderFormEstimatedTime() {\n        const { estimatedTime } = this.state;\n        return (\n            <li className=\"course--stats--list--item\">\n                <h4>Estimated Time</h4>\n                <div>\n                    <input \n                        id=\"estimatedTime\" \n                        name=\"estimatedTime\" \n                        type=\"text\" \n                        className=\"course--time--input\"\n                        value={estimatedTime}\n                        onChange={this.change}\n                        placeholder=\"Hours\">\n                    </input>\n                </div>\n            </li>\n        )\n    }\n\n    renderFormMaterialsNeeded() {\n        const { materialsNeeded } = this.state;\n        return (\n            <li className=\"course--stats--list--item\">\n                <h4>Materials Needed</h4>\n                <div>\n                    <textarea \n                        id=\"materialsNeeded\" \n                        name=\"materialsNeeded\" \n                        className=\"\" \n                        value={materialsNeeded}\n                        onChange={this.change}\n                        placeholder=\"List materials...\">\n                    </textarea>\n                </div>\n            </li>\n        )\n    }\n}\n \nexport default CreateCourse;\n\n","import React, { Component } from 'react';\nimport Form from './Form';\n\nclass UpdateCourse extends Component {\n    state = {\n        status: null,\n        id: null,\n        message: '',\n        title: '',\n        description: '',\n        estimatedTime: '',\n        materialsNeeded: '',\n        user: null,\n        errors: [],\n    }\n\n    render() { \n        const {\n            errors\n        } = this.state;\n\n        const { status } = this.state;\n\n        this.checkUser();\n        \n        return (\n            <div className=\"bounds course--detail\">\n                <h1>Update Course</h1>\n                {status ?\n                    <Form \n                        cancel={this.cancel}\n                        errors={errors}\n                        submit={this.submit}\n                        submitButtonText=\"Update Course\"\n                        elements={() => (\n                            <React.Fragment>\n                                <div className=\"grid-66\">\n                                    {this.renderFormTitle()}\n                                    {this.renderFormDescription()}\n                                </div>\n                                <div className=\"grid-25 grid-right\">\n                                    <div className=\"course--stats\">\n                                        <ul className=\"course--stats--list\">\n                                            {this.renderFormEstimatedTime()}\n                                            {this.renderFormMaterialsNeeded()}\n                                        </ul>\n                                    </div>\n                                </div>\n                            </React.Fragment>  \n                        )}\n                    />\n                    :\n                    <div className=\"bounds\">\n                        <h1>Loading...</h1>\n                    </div>\n                }\n                \n            </div>\n        );\n    }\n\n    componentDidMount() {\n        this.getCourse(); \n\n    }\n\n    // Save course data to state from Fetch API\n    getCourse = async () => {\n        const { fetchAPI } = this.props.context;\n        const id = this.props.match.params.id;\n    \n        const data = await fetchAPI.getCourse(id);\n\n        if (data.status === 200) {\n            this.setState(\n                {...data.data,\n                    status: data.status\n                });\n        } else if (data.status === 404) {\n            this.props.history.push('/notfound');\n        } else {\n            this.props.history.push('/error');\n        }\n    }\n\n    // verify authenticated user owns the course\n    checkUser = () => {\n        let courseUserId;\n        const authUserId = this.props.context.authenticatedUser.id;\n\n        if (this.state.user !== null) {\n            courseUserId = this.state.user.id;\n        }\n        if (courseUserId > 0) {\n            if (courseUserId !== authUserId) {\n                this.props.history.push('/forbidden');\n            }\n        }\n    }\n\n    change = (event) => {\n        const { name, value } = event.target;\n\n        this.setState(() => {\n            return {\n                [name]: value\n            };\n        });\n    }\n\n    submit = async () => {\n        const { fetchAPI, authenticatedUser } = this.props.context;\n        const index = this.props.match.params.id;\n        const { emailAddress, password } = authenticatedUser;\n\n        const {\n            title,\n            description,\n            estimatedTime,\n            materialsNeeded,\n        } = this.state;\n\n        const updates = {\n            title,\n            description: description.replace(/\\n/g, '  \\n'),\n            estimatedTime: estimatedTime.includes('hour') ? \n                estimatedTime : \n                estimatedTime.includes('one', 0) || (estimatedTime.length === 1 && estimatedTime.includes('1', 0)) ? \n                    estimatedTime + ' hour' :\n                    estimatedTime + ' hours',\n            materialsNeeded: materialsNeeded.replace(/\\n/g, '  \\n')\n        };\n\n        const data = await fetchAPI.updateCourse(index, updates, emailAddress, password);\n\n        if (data.status === 204) {\n            this.props.history.push(`/courses${data.location}`);\n        } else if (data.status === 400) {\n            this.setState({ errors: data.errors });\n        } else if (data.status === 401 || data.status === 403) {\n            this.props.history.push(`/forbidden`);\n        } else if (data.status === 404) {\n            this.props.history.push(`/notfound`);\n        } else {\n            this.props.history.push('/error');\n        }\n    }\n\n    cancel = () => {\n        this.props.history.push('/');\n    }\n\n    /** Render helper methods **/\n\n    renderFormTitle() {\n        const { title } = this.state;\n\n        return (\n            <div key={1} className=\"course--header\">\n                <h4 className=\"course==label\">Course</h4>\n                <div>\n                    <input \n                        className=\"input-title course--title--input\" \n                        id=\"title\" \n                        name=\"title\" \n                        type=\"text\"\n                        value={title}\n                        onChange={this.change}\n                        placeholder={title}  />\n                </div>\n                <p>By Joes Smith</p>\n            </div>\n        )\n    }\n\n    renderFormDescription() {\n        const { description } = this.state;\n        return (\n            <div className=\"course--description\">\n                <textarea \n                    id=\"description\" \n                    name=\"description\" \n                    className=\"\" \n                    value={description}\n                    onChange={this.change}\n                    placeholder=\"Course description...\">\n                </textarea>\n            </div>\n        )\n    }\n\n    renderFormEstimatedTime() {\n        const { estimatedTime } = this.state;\n        return (\n            <li className=\"course--stats--list--item\">\n                <h4>Estimated Time</h4>\n                <div>\n                    <input \n                        id=\"estimatedTime\" \n                        name=\"estimatedTime\" \n                        type=\"text\" \n                        className=\"course--time--input\"\n                        value={estimatedTime}\n                        onChange={this.change}\n                        placeholder=\"Hours\">\n                    </input>\n                </div>\n            </li>\n        )\n    }\n\n    renderFormMaterialsNeeded() {\n        const { materialsNeeded } = this.state;\n        return (\n            <li className=\"course--stats--list--item\">\n                <h4>Materials Needed</h4>\n                <div>\n                    <textarea \n                        id=\"materialsNeeded\" \n                        name=\"materialsNeeded\" \n                        className=\"\" \n                        value={materialsNeeded}\n                        onChange={this.change}\n                        placeholder=\"List materials...\">\n                    </textarea>\n                </div>\n            </li>\n        )\n    }\n\n}\n \nexport default UpdateCourse;","import React, { Component } from 'react';\nimport Form from './Form';\n\nclass UserSignIn extends Component {\n    state = {\n        emailAddress: '',\n        password: '',\n        errors: []\n    };\n    \n    render() { \n        const {\n            emailAddress,\n            password,\n            errors\n        } = this.state;\n\n        return (\n            <div className=\"bounds\">\n                <div className=\"grid-33 centered signin\">\n                    <h1>Sign In</h1>\n                        <Form \n                            cancel={this.cancel}\n                            submit={this.submit}\n                            errors={errors}\n                            submitButtonText=\"Sign in\"\n                            elements={() => (\n                                <React.Fragment>\n                                    <input \n                                        id=\"emailAddress\" \n                                        name=\"emailAddress\" \n                                        type=\"text\"\n                                        value={emailAddress} \n                                        onChange={this.change}\n                                        placeholder=\"Email Address\" />\n                                    <input \n                                        id=\"password\" \n                                        name=\"password\" \n                                        type=\"password\" \n                                        value={password} \n                                        onChange={this.change}\n                                        placeholder=\"password\" />\n                                </React.Fragment>\n                            )}\n                        />\n                    <p>Don't have a user account? \n                        <a href=\"/signup\"> Click here </a> \n                        to sign up!\n                    </p>\n                </div>\n            </div>\n        );\n    }\n\n    change = (event) => {\n        const { name, value } =  event.target;\n\n        this.setState(() => {\n            return {\n                [name]: value\n            };\n        });\n    }\n\n    // Store authenticated user to Context Provider's state\n    submit = () => {\n        const { context } = this.props;\n        const { from } = this.props.location.state || { from: {pathname: '/' }};\n        const { emailAddress, password } = this.state;\n\n        context.actions.signIn(emailAddress, password)\n            .then( user => {\n                if (user === null) {\n                    this.setState(() => {\n                        return { \n                            errors: ['Sign-in was unsuccessful'],\n                            password: ''\n                        };\n                    });  \n                } else {\n                    this.props.history.push(from);\n                    console.log(`SUCCESS! ${emailAddress} is now signed in!`);\n                }\n            })\n            .catch((err) => {\n                this.props.history.push('/error')\n            })\n\n    }\n\n    cancel = () => {\n        this.props.history.push('/');\n    }\n}\n \nexport default UserSignIn;","import React, { Component } from 'react';\nimport Form from './Form';\n\nclass UserSignIn extends Component {\n    state = {\n        firstName: '',\n        lastName: '',\n        emailAddress: '',\n        password: '',\n        confirmPassword: '',\n        errors: []\n    };\n    \n    render() { \n        const {\n            firstName,\n            lastName,\n            emailAddress,\n            password,\n            confirmPassword,\n            errors\n        } = this.state;\n\n        return (\n            <div className=\"bounds\">\n                <div className=\"grid-33 centered signin\">\n                    <h1>Sign Up</h1>\n                        <Form \n                            cancel={this.cancel}\n                            submit={this.submit}\n                            errors={errors}\n                            submitButtonText=\"Sign Up\"\n                            elements={() => (\n                                <React.Fragment>\n                                    <input \n                                        id=\"firstName\" \n                                        name=\"firstName\" \n                                        type=\"text\"\n                                        value={firstName} \n                                        onChange={this.change}\n                                        placeholder=\"First Name\" />\n                                    <input \n                                        id=\"lastName\" \n                                        name=\"lastName\" \n                                        type=\"text\"\n                                        value={lastName} \n                                        onChange={this.change}\n                                        placeholder=\"Last Name\" />\n                                    <input \n                                        id=\"emailAddress\" \n                                        name=\"emailAddress\" \n                                        type=\"text\"\n                                        value={emailAddress} \n                                        onChange={this.change}\n                                        placeholder=\"Email Address\" />\n                                    <input \n                                        id=\"password\" \n                                        name=\"password\" \n                                        type=\"password\" \n                                        value={password} \n                                        onChange={this.change}\n                                        placeholder=\"Password\" />\n                                    <input \n                                        id=\"confirmPassword\" \n                                        name=\"confirmPassword\" \n                                        type=\"password\" \n                                        value={confirmPassword} \n                                        onChange={this.change}\n                                        placeholder=\"Confirm Password\" />\n                                </React.Fragment>\n                            )}\n                        />\n                    <p>Already have a user account? \n                        <a href=\"/signin\"> Click here </a> \n                        to sign in!\n                    </p>\n                </div>\n            </div>\n        );\n    }\n\n    change = (event) => {\n        const { name, value } =  event.target;\n\n        this.setState(() => {\n            return {\n                [name]: value\n            };\n        });\n    }\n\n    // Create new user via Context Provider's method\n    submit = () => {\n        const { context } = this.props;\n        const {\n            firstName,\n            lastName,\n            emailAddress,\n            password,\n            confirmPassword\n        } = this.state;\n\n        const user = {\n            firstName,\n            lastName,\n            emailAddress,\n            password\n        }\n    \n        if(password !== confirmPassword) {\n            let errors = [];\n            errors = errors.concat(\"Password confirmation was incorrect. Please try again.\");\n            console.log(errors);\n            \n            this.setState({ errors });\n        } else {\n            context.fetchAPI.createUser(user)\n            .then( errors => {\n                if (errors.length) {\n                    this.setState({ errors });\n                } else {\n                    context.actions.signIn(emailAddress, password)\n                        .then(() => {\n                        this.props.history.push('/');\n                        });\n                console.log(`${emailAddress} is successfully signed up and authenticated!`);\n                }\n            })\n            .catch( err => {\n                console.log(err);\n                this.props.history.push('/error');\n            });\n        }\n \n    }\n\n    cancel = () => {\n        this.props.history.push('/');\n    }\n}\n \nexport default UserSignIn;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport default ({ context }) => {\n    context.actions.signOut();\n    return (\n        <Redirect to=\"/\" />\n    );\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default () => {\n\n    return (   \n        <React.Fragment>\n            <div className=\"bounds\">\n                <h1>Error</h1>\n                <p>Sorry! We just encountered an unexpected error.</p>\n            </div>\n            <div className=\"bounds grid=100\">\n                <NavLink className=\"button button-secondary\" to=\"/\">Return to List</NavLink>\n            </div>\n        </React.Fragment>\n    );\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default () => {\n    return (\n        <React.Fragment>\n            <div className=\"bounds\">\n                <h1>Not Found</h1>\n                <p>Sorry! We couldn't find the page you're looking for.</p>\n            </div>\n            <div className=\"bounds grid=100\">\n                <NavLink className=\"button button-secondary\" to=\"/\">Return to List</NavLink>\n        </div>\n        </React.Fragment>\n    );\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default () => {\n    return (\n        <React.Fragment>\n        <div className=\"bounds\">\n            <h1>Forbidden</h1>\n            <p>Oh oh! You can't access this page.</p>\n        </div>\n        <div className=\"bounds grid=100\">\n            <NavLink className=\"button button-secondary\" to=\"/\">Return to List</NavLink>\n        </div>\n        </React.Fragment>\n\n    );\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { Consumer } from './Context';\n\nexport default ({ component: Component, ...rest }) => {\n    return (\n        <Consumer>\n            { context => (\n                <Route \n                    {...rest}\n                    render={props => context.authenticatedUser ? (\n                        <Component {...props} />\n                    ) : (\n                        <Redirect to={{\n                            pathname: '/signin',\n                            state: { from: props.location },\n                        }} />\n                    )}\n                />\n            )}\n        </Consumer>\n    );\n};","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\n\n// Import Components\nimport Header from './components/Header';\nimport Courses from './components/Courses';\nimport CourseDetail from './components/CourseDetail';\nimport CreateCourse from './components/CreateCourse';\nimport UpdateCourse from './components/UpdateCourse';\nimport UserSignIn from './components/UserSignIn';\nimport UserSignUp from './components/UserSignUp';\nimport UserSignOut from './components/UserSignOut';\nimport Error from './components/Error';\nimport NotFound from './components/NotFound';\nimport Forbidden from './components/Forbidden';\nimport PrivateRoute from './PrivateRoute';\n\n// Consumer wrapper\nimport withContext from './Context';\nconst HeaderWithContext = withContext(Header);\n\nexport default () => (\n  <Router>\n    <div>\n      <HeaderWithContext />\n      <Switch>\n        <Route exact path=\"/\" component={withContext(Courses)} />\n        <Route path = '/signin' component={withContext(UserSignIn)} />\n        <Route path = '/signup' component={withContext(UserSignUp)} />\n        <Route path = '/signout' component={withContext(UserSignOut)} />\n        <PrivateRoute path=\"/courses/create\" component={withContext(CreateCourse)} />\n        <PrivateRoute path=\"/courses/:id/update\" component={withContext(UpdateCourse)} />\n        <Route exact path=\"/courses/:id\" component={withContext(CourseDetail)} />\n        <Route path=\"/error\" component={Error} />\n        <Route path=\"/forbidden\" component={Forbidden} />\n        <Route path=\"/notfound\" component={NotFound} />\n        <Route component={NotFound} />\n      </Switch>\n    </div>\n  </Router>\n);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n\nexport default ( {context }) => {\n\n    const user = context.authenticatedUser;\n    return (\n        <div className=\"header\">\n            <div className=\"bounds\">\n                <a className=\"header--logo\" href=\"/\">Courses</a>\n                <nav>\n                    {user ? \n                        <React.Fragment>\n                            <span>Welcome, {user.firstName} {user.lastName}!</span>\n                            <NavLink to=\"/signout\">Sign Out</NavLink>\n                        </React.Fragment>\n                        :\n                        <React.Fragment>\n                            <NavLink className=\"signup\" to=\"/signup\">Sign Up</NavLink>\n                            <NavLink className=\"signin\" to=\"/signin\">Sign In</NavLink>\n                        </React.Fragment>\n                    }\n                </nav>       \n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/global.css';\nimport './styles/new.css';\n\nimport { Provider } from './Context';\nimport App from './App';\n\n\nReactDOM.render(\n  <Provider>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}